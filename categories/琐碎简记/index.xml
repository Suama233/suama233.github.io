<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>琐碎简记 on きこえるの？</title>
    <link>https://suama.github.io/categories/%E7%90%90%E7%A2%8E%E7%AE%80%E8%AE%B0/</link>
    <description>Recent content in 琐碎简记 on きこえるの？</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 09 Aug 2025 08:12:52 +0800</lastBuildDate>
    <atom:link href="https://suama.github.io/categories/%E7%90%90%E7%A2%8E%E7%AE%80%E8%AE%B0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[琐碎简记]Xavier初始化内容与原理</title>
      <link>https://suama.github.io/post/xavier_init/</link>
      <pubDate>Sat, 09 Aug 2025 08:12:52 +0800</pubDate>
      <guid>https://suama.github.io/post/xavier_init/</guid>
      <description>&lt;h3 id=&#34;为什么需要设计初始化&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%b8%ba%e4%bb%80%e4%b9%88%e9%9c%80%e8%a6%81%e8%ae%be%e8%ae%a1%e5%88%9d%e5%a7%8b%e5%8c%96&#34;&gt;&lt;/a&gt;&#xD;&#xA;为什么需要设计初始化&#xD;&#xA;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;首先要接受一个事实：初始化方法会影响训练效果&lt;/strong&gt;&#xA;（其实有人初见会觉得奇怪，但比较显然：如不动点的捕捉，空间其他点的生成位置显然会决定其后来在步进中逐渐跌向的不动点是哪个）&lt;/p&gt;</description>
    </item>
    <item>
      <title>[琐碎简记]高斯函数的积分方法</title>
      <link>https://suama.github.io/post/gaussian-like_integral/</link>
      <pubDate>Sun, 27 Apr 2025 20:12:52 +0800</pubDate>
      <guid>https://suama.github.io/post/gaussian-like_integral/</guid>
      <description>&lt;h2 id=&#34;关于高斯函数&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%85%b3%e4%ba%8e%e9%ab%98%e6%96%af%e5%87%bd%e6%95%b0&#34;&gt;&lt;/a&gt;&#xD;&#xA;关于高斯函数&#xD;&#xA;&lt;/h2&gt;$$f(x)=e^{-ax^2}$$$$\int_{-\infty }^{\infty}f(x) dx = \sqrt{\frac{\pi}{a}} $$&lt;h2 id=&#34;具体求解&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%85%b7%e4%bd%93%e6%b1%82%e8%a7%a3&#34;&gt;&lt;/a&gt;&#xD;&#xA;具体求解&#xD;&#xA;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;首先考虑基础积分：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;令$I = \int_{-\infty}^{\infty}e^{-x^2}dx$&lt;/p&gt;&#xA;&lt;p&gt;其本身是无法直接求解的，一个非常巧妙的方法是求$I^2$&lt;/p&gt;&#xA;$$I^2 = (\int_{-\infty}^{\infty}e^{-x^2}dx)^2 = (\int_{-\infty}^{\infty}e^{-x^2}dx)(\int_{-\infty}^{\infty}e^{-y^2}dy)$$$$I^2 = \int_{-\infty}^{\infty}dx\int_{-\infty}^{\infty}e^{-x^2-y^2}dy$$&lt;p&gt;&#xA;可做极坐标换元等，求得$I^2=\pi,I=\sqrt{\pi}$&lt;/p&gt;</description>
    </item>
    <item>
      <title>[琐碎简记]二分查找、离散边界确认与终止点选择</title>
      <link>https://suama.github.io/post/binary_search/</link>
      <pubDate>Sat, 26 Apr 2025 07:07:52 +0800</pubDate>
      <guid>https://suama.github.io/post/binary_search/</guid>
      <description>&lt;p&gt;&lt;strong&gt;注：本篇使用语言：C++&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;基本背景与类似情况&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%9f%ba%e6%9c%ac%e8%83%8c%e6%99%af%e4%b8%8e%e7%b1%bb%e4%bc%bc%e6%83%85%e5%86%b5&#34;&gt;&lt;/a&gt;&#xD;&#xA;基本背景与类似情况&#xD;&#xA;&lt;/h2&gt;&lt;p&gt;二分查找原理本身很简单：对一顺序数组取中间值，比较其与目标大小，让中间值成为新边界，二分缩短区间。此过程迭代进行，直到找到或找不到目标，时间复杂度$O(logn)$&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
